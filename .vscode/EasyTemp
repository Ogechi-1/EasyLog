#include <SPI.h>
#include <Wire.h>
#include <Adafruit_MAX31855.h>
#include <RTClib.h>

// Pin definitions for MAX31855
#define MAX31855_CLK 10
#define MAX31855_CS 13
#define MAX31855_DO 11

// Create RTC and MAX31855 objects
RTC_DS3231 rtc; // RTC object
Adafruit_MAX31855 thermocouple(MAX31855_CLK, MAX31855_CS, MAX31855_DO); // MAX31855 object

void setup() {
  Serial.begin(9600);
  while (!Serial) delay(10); // Wait for Serial to initialize

  // Initialize RTC
  Wire.begin(); // No parameters needed for Wire.begin()
  if (!rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }

  // Check if RTC lost power
  if (rtc.lostPower()) {
    Serial.println("RTC lost power, setting the time!");
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__))); // Set the RTC to the date & time this sketch was compiled
  }

  Serial.println("Initialization complete.");
}

void loop() {
  // Read temperature
  double temperature = thermocouple.readCelsius();
  
  // Get current date and time
  DateTime now = rtc.now();

  // Print timestamp and temperature
  Serial.print("Timestamp: ");
  Serial.print(now.year(), DEC);
  Serial.print('/');
  Serial.print(now.month(), DEC);
  Serial.print('/');
  Serial.print(now.day(), DEC);
  Serial.print(' ');
  Serial.print(now.hour(), DEC);
  Serial.print(':');
  if (now.minute() < 10) Serial.print('0');
  Serial.print(now.minute(), DEC);
  Serial.print(':');
  if (now.second() < 10) Serial.print('0');
  Serial.print(now.second(), DEC);
  Serial.print(" - Temperature: ");
  
  if (!isnan(temperature)) {
    Serial.print(temperature, 2);
    Serial.println(" Â°C");
  } else {
    Serial.print("Error reading temperature. Error code: ");
    Serial.println(thermocouple.readError()); // Prints specific error code
  }

  delay(5000); // Wait for 5 seconds before the next reading
}
